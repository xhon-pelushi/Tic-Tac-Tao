name: Code Quality Check

# Regular code quality and documentation updates
on:
  schedule:
    # Runs at 8:30 AM ET (13:30 UTC during EDT) - slightly offset from daily contribution
    - cron: '30 13 * * *'
  
  # Also allow manual triggering
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'documentation'
        type: choice
        options:
        - documentation
        - code_cleanup
        - version_bump

jobs:
  auto-update:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Add any dependencies your project needs
        
    - name: Run tests
      run: |
        echo "Running basic tests..."
        python -c "import tictactoe; print('Terminal version syntax check: OK')"
        python -c "import tictactoe_gui; print('GUI version syntax check: OK')"
        
    - name: Update documentation
      if: github.event.inputs.update_type == 'documentation' || github.event_name == 'schedule'
      run: |
        echo "Updating documentation..."
        # Add current date to README
        sed -i "s/Last updated:.*/Last updated: $(date +'%Y-%m-%d')/g" README.md || echo "Last updated: $(date +'%Y-%m-%d')" >> README.md
        
    - name: Code cleanup
      if: github.event.inputs.update_type == 'code_cleanup'
      run: |
        echo "Performing code cleanup..."
        # Remove trailing whitespace
        find . -name "*.py" -exec sed -i 's/[[:space:]]*$//' {} \;
        
    - name: Version bump
      if: github.event.inputs.update_type == 'version_bump'
      run: |
        echo "Bumping version..."
        # This could increment version numbers in your files
        echo "Version bump completed"
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are any changes
        if git diff --quiet && git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git add .
          git commit -m "Update documentation and code quality checks"
          git push
          echo "Changes committed and pushed successfully!"
        fi
